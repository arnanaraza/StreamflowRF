val.list[[i]] <- val.join
gc()
rm(RF1,train,test)
}
setwd(predDir)
save(RF,file =  paste0(basin,'_',RFS,'_',td,".RData"))
write.csv(ldply(val.list,data.frame), paste0(basin,'_',RFS,'_',td,'_pred.csv'), row.names=F)
setwd(mainDir)
}
mrb.VT <- read.csv("C:/StreamflowRF_Results/VT/mrb.csv")
predDir <-"C:/StreamflowRF_Results/results/val_monthly"
lapply(1:length(unique(mrb.VT$C.bname)), function(x) predTest(1, mrb.VT,unique(mrb.VT$C.bname)[[x]],
'basin', predDir, 'monthly'))##,val_yr[rb==5] [[x]]))
td=mrb.VT
dir.create(predDir, showWarnings = FALSE)
td$date <- as.Date(td$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
basin=
'mrb_s'
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
ddf
df
### Model testing (held-out data)
setwd(mainDir)
source('R/predTest2.R')
predDir <-"C:/StreamflowRF_Results/results/val_monthly"
lapply(1:length(unique(mrb.VT$C.bname)), function(x) predTest(1, mrb.VT,unique(mrb.VT$C.bname)[[x]],
'basin', predDir, 'monthly'))##,val_yr[rb==5] [[x]]))
df=mrb.VT
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
for (i in 1:length(folds)){ #for every year!
if(RFS=='shed'){
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
}else{
train <- rbind(training,setdiff(test1,folds[[i]]))
test <- folds[[i]]
}
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
#check if monthly model or not
if (tempo == 'monthly'){
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train$mo <- floor_date(train$date, "mo")
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test$mo <- floor_date(test$date, "mo")
}
train[] <- sapply(train, as.numeric)
date <- test$date
test <- td[ , !(names(test) %in% c('date'))]
test[] <- sapply(test, as.numeric)
#model training and testing including bias correction
RF <- ranger(train$O.obs ~ ., data=train[,-17], importance='permutation', mtry=15, keep.inbag=T) #should be re-run
val.rf <- predict(RF, test[-17], type='se')
train$O.obs <-  RF$predictions - train$O.obs #bias
RF1 <-  ranger(train$O.obs ~ ., data=train[,-17], importance='permutation',mtry=15, keep.inbag = T)
val.rf.bc <- predict(RF1, test[-17], type='se')
val.rf$predictions.bc <- val.rf$predictions - val.rf.bc$predictions
val.rf$predictions.bc <- ifelse(val.rf$predictions.bc < 0 ,val.rf$predictions,
val.rf$predictions.bc)
val.rf$se.bc <- val.rf$se - val.rf.bc$se
val.rf$se.bc <- ifelse(val.rf$se.bc < 0 ,val.rf$se, val.rf$se.bc)
val.join <- data.frame(cbind(test$O.obs,val.rf$predictions.bc,
val.rf$predictions,val.rf$se.bc, val.rf$se))
val.join <- cbind(val.join, as.Date(date))
names (val.join) <- c('observed','predicted_bc','predicted','se_bc', 'se', 'date')
print(summary(lm(observed~predicted_bc, val.join)))
val.list[[i]] <- val.join
gc()
rm(RF1,train,test)
}
RFS='basin'
train <- rbind(training,setdiff(test1,folds[[i]]))
test <- folds[[i]]
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
#check if monthly model or not
if (tempo == 'monthly'){
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train$mo <- floor_date(train$date, "mo")
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test$mo <- floor_date(test$date, "mo")
}
tempo=='monthly'
tempo='monthly'
#check if monthly model or not
if (tempo == 'monthly'){
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train$mo <- floor_date(train$date, "mo")
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test$mo <- floor_date(test$date, "mo")
}
td=1
train[] <- sapply(train, as.numeric)
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
head(train)
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train$mo <- floor_date(train$date, "mo")
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
head(train)
train <- train[ , !(names(train) %in% c('mo'))]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test <- test[ , !(names(test) %in% c('mo'))]
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
names(train)
head(train)
if(RFS=='shed'){
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
}else{
train <- rbind(training,setdiff(test1,folds[[i]]))
test <- folds[[i]]
}
train <- train[ , !(names(train) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
head(train)
train <- train[,-1]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test <- test[ , !(names(test) %in% c('C.bname'))]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
head(test)
test <- setdiff(test1,train)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
i
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train <- train[,-1]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
names(test)
test <- test[ , -1]
train[] <- sapply(train, as.numeric)
str(train)
#  train[] <- sapply(train, as.numeric)
date <- test$date
test <- td[ , !(names(test) %in% c('date'))]
test <- test[ , !(names(test) %in% c('date'))]
train[,17]
source('R/predTest2.R')
predDir <-"C:/StreamflowRF_Results/results/val_monthly"
1
lapply(1:length(unique(mrb.VT$C.bname)), function(x) predTest(1, mrb.VT,unique(mrb.VT$C.bname)[[x]],
'basin', predDir, 'monthly'))##,val_yr[rb==5] [[x]]))
train$O.obs
test$O.obs
#model training and testing including bias correction
RF <- ranger(train$O.obs ~ ., data=train[,-17], importance='permutation', mtry=15, keep.inbag=T) #should be re-run
val.rf <- predict(RF, test[-17], type='se')
train$O.obs <-  RF$predictions - train$O.obs #bias
#model training and testing including bias correction
RF <- ranger(train$O.obs ~ ., data=train[,-17], importance='permutation', mtry=15, keep.inbag=T) #should be re-run
RF
sum(is.na(train))
hist(train$O.obs)
View(train)
hist(df$O.obs)
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
train$mo <- floor_date(train$date, "month")
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train <- train[,-1]
train <- train[ , !(names(train) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
train <-  setdiff(test1,folds[[i]])#remove the year!
test <- setdiff(test1,train)
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train <- train[,-1]
head(train)
train$C.mo
train$O.obs
hist(train$O.obs)
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test <- test[ , -1]
#model training and testing including bias correction
RF <- ranger(train$O.obs ~ ., data=train[,-17], importance='permutation', mtry=15, keep.inbag=T) #should be re-run
val.rf <- predict(RF, test[-17], type='se')
RF
hist(RF$predictions)
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
train <-  setdiff(test1,rbind(folds[[i]],folds[[i+1]]))#remove the year!
test <- setdiff(test1,train)
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train <- train[,-1]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test <- test[ , -1]
date <- test$date
test <- test[ , !(names(test) %in% c('date'))]
# Function to predict using RF model then
predTest <- function (td=1, df=mrb.VT, basin='mrb_s', RFS='all',predDir, tempo = 'monthly') {
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
for (i in 1:length(folds)){ #for every year!
if(RFS=='shed'){
train <-  setdiff(test1,rbind(folds[[i]],folds[[i+1]]))#remove the year!
test <- setdiff(test1,train)
}else{
train <- rbind(training,setdiff(test1,rbind(folds[[i]],folds[[i+1]])))
test <- rbind(folds[[i]],folds[[i+1]])
}
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
#check if monthly model or not
if (tempo == 'monthly'){
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train <- train[,-1]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test <- test[ , -1]
}
date <- test$date
test <- test[ , !(names(test) %in% c('date'))]
#model training and testing including bias correction
RF <- ranger(train$O.obs ~ ., data=train[,-17], importance='permutation', mtry=15, keep.inbag=T) #should be re-run
val.rf <- predict(RF, test[-17], type='se')
train$O.obs <-  RF$predictions - train$O.obs #bias
RF1 <-  ranger(train$O.obs ~ ., data=train[,-17], importance='permutation',mtry=15, keep.inbag = T)
val.rf.bc <- predict(RF1, test[-17], type='se')
val.rf$predictions.bc <- val.rf$predictions - val.rf.bc$predictions
val.rf$predictions.bc <- ifelse(val.rf$predictions.bc < 0 ,val.rf$predictions,
val.rf$predictions.bc)
val.rf$se.bc <- val.rf$se - val.rf.bc$se
val.rf$se.bc <- ifelse(val.rf$se.bc < 0 ,val.rf$se, val.rf$se.bc)
val.join <- data.frame(cbind(test$O.obs,val.rf$predictions.bc,
val.rf$predictions,val.rf$se.bc, val.rf$se))
val.join <- cbind(val.join, as.Date(date))
names (val.join) <- c('observed','predicted_bc','predicted','se_bc', 'se', 'date')
print(summary(lm(observed~predicted_bc, val.join)))
val.list[[i]] <- val.join
gc()
rm(RF1,train,test)
}
setwd(predDir)
save(RF,file =  paste0(basin,'_',RFS,'_',td,".RData"))
write.csv(ldply(val.list,data.frame), paste0(basin,'_',RFS,'_',td,'_pred.csv'), row.names=F)
setwd(mainDir)
}
lapply(1:length(unique(mrb.VT$C.bname)), function(x) predTest(1, mrb.VT,unique(mrb.VT$C.bname)[[x]],
'basin', predDir, 'monthly'))##,val_yr[rb==5] [[x]]))
dir.create(predDir, showWarnings = FALSE)
df$date <- as.Date(df$date, format= "%Y-%m-%d")
#prepare training-test data
set.seed(123)
training <- subset(df, df$C.bname != basin)
testing <- subset(df, df$C.bname == basin)
#create folds
testing$year <- format(testing$date,"%Y")
na_obs <- testing %>%
group_by(year) %>%
summarise_at(vars(starts_with("O.obs")), ~sum(is.na(.)))
folds <- lapply(na_obs$year, function(x) subset(testing, testing$year == x))
#remove year after the folds
folds <- lapply(folds, function(x) { x["year"] <- NULL; x })
test1 <- testing[,-length(testing)]
#x-val
val.list <- list()
train <- rbind(training,setdiff(test1,rbind(folds[[i]],folds[[i+1]])))
test <- rbind(folds[[i]],folds[[i+1]])
train <- train[ , !(names(train) %in% c('C.bname'))]
test <- test[ , !(names(test) %in% c('C.bname'))]
train$mo <- floor_date(train$date, "month")
train <- train[ , !(names(train) %in% c('date'))]
train <- data.table(train)
train=train[, lapply(.SD, mean), by = mo]
train <- train[,-1]
test$mo <- floor_date(test$date, "month")
test <- data.table(test)
test=test[, lapply(.SD, mean), by = mo]
test <- test[ , -1]
date <- test$date
test <- test[ , !(names(test) %in% c('date'))]
names(test)
